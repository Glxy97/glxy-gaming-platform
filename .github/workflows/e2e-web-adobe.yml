name: E2E Tests - Web Adobe Integration

on:
  push:
    branches: [main, develop]
    paths:
      - 'app/web-adobe/**'
      - 'e2e/tests/web-adobe*.spec.ts'
      - 'e2e/fixtures/**'
      - 'e2e/page-objects/**'
      - 'e2e/helpers/**'
  pull_request:
    branches: [main, develop]
    paths:
      - 'app/web-adobe/**'
      - 'e2e/tests/web-adobe*.spec.ts'
      - 'e2e/fixtures/**'
      - 'e2e/page-objects/**'
      - 'e2e/helpers/**'

jobs:
  test:
    name: Playwright E2E Tests
    runs-on: ubuntu-latest
    timeout-minutes: 30

    strategy:
      fail-fast: false
      matrix:
        browser: [chromium]
        # Optional: Firefox und WebKit hinzufügen
        # browser: [chromium, firefox, webkit]

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'

      - name: Install Dependencies
        run: npm ci --legacy-peer-deps

      - name: Install Playwright Browsers
        run: npx playwright install --with-deps ${{ matrix.browser }}

      - name: Setup Test Database
        run: |
          # Optional: Setup Test-DB wenn nötig
          # npx prisma migrate deploy
          echo "Database setup skipped (using mocks)"

      - name: Build Application
        run: npm run build
        env:
          NODE_ENV: production
          SKIP_ENV_VALIDATION: true

      - name: Run Web-Adobe E2E Tests
        run: npm run test:e2e:web-adobe
        env:
          PLAYWRIGHT_BASE_URL: http://localhost:3000
          CI: true

      - name: Upload Playwright Report
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: playwright-report-${{ matrix.browser }}
          path: playwright-report/
          retention-days: 30

      - name: Upload Test Screenshots
        uses: actions/upload-artifact@v4
        if: failure()
        with:
          name: screenshots-${{ matrix.browser }}
          path: e2e/screenshots/
          retention-days: 7

      - name: Upload Test Videos
        uses: actions/upload-artifact@v4
        if: failure()
        with:
          name: videos-${{ matrix.browser }}
          path: test-results/
          retention-days: 7

  report:
    name: Generate Test Report
    runs-on: ubuntu-latest
    needs: test
    if: always()

    steps:
      - name: Download Artifacts
        uses: actions/download-artifact@v4
        with:
          path: artifacts

      - name: Publish Test Results
        uses: dorny/test-reporter@v1
        if: success() || failure()
        with:
          name: Playwright Test Results
          path: 'artifacts/**/*.xml'
          reporter: java-junit
          fail-on-error: true

  notify:
    name: Notify on Failure
    runs-on: ubuntu-latest
    needs: test
    if: failure() && github.ref == 'refs/heads/main'

    steps:
      - name: Send Notification
        run: |
          echo "E2E Tests failed on main branch"
          # Optional: Slack/Discord/Email Notification
          # curl -X POST ${{ secrets.SLACK_WEBHOOK_URL }} \
          #   -H 'Content-Type: application/json' \
          #   -d '{"text":"Web-Adobe E2E Tests failed on main branch"}'
