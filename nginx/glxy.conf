# NGINX Configuration for GLXY Gaming Platform

# MIME types for static assets
types {
    application/javascript js;
    text/css css;
    font/woff2 woff2;
    image/svg+xml svg;
    application/json json;
    text/html html;
    image/png png;
    image/jpeg jpg jpeg;
    image/gif gif;
    image/webp webp;
}

# Upstream definitions
upstream nextjs_backend {
    server app:3001;
    keepalive 32;
}

upstream web_adobe_api {
    server web-adobe-api:8000;
    keepalive 16;
}

server {
    listen 80;
    server_name glxy.at www.glxy.at;

    # Redirect all HTTP to HTTPS
    return 301 https://$server_name$request_uri;
}

server {
    listen 443 ssl http2;
    server_name glxy.at www.glxy.at;

    # SSL Configuration
    ssl_certificate /etc/nginx/ssl/glxy.at.crt;
    ssl_certificate_key /etc/nginx/ssl/glxy.at.key;
    ssl_protocols TLSv1.2 TLSv1.3;
    ssl_ciphers ECDHE-RSA-AES256-GCM-SHA512:DHE-RSA-AES256-GCM-SHA512:ECDHE-RSA-AES256-GCM-SHA384:DHE-RSA-AES256-GCM-SHA384;
    ssl_prefer_server_ciphers off;

    # Security headers
    add_header X-Frame-Options "SAMEORIGIN" always;
    add_header X-XSS-Protection "1; mode=block" always;
    add_header X-Content-Type-Options "nosniff" always;
    add_header Referrer-Policy "no-referrer-when-downgrade" always;
    add_header Content-Security-Policy "default-src 'self' http: https: data: blob: 'unsafe-inline'" always;

    # Client upload size for PDF uploads
    client_max_body_size 50M;

    # Static assets - immutable caching
    location /_next/static/ {
        add_header Cache-Control "public, max-age=31536000, immutable";
        proxy_pass http://nextjs_backend;
        proxy_http_version 1.1;
        proxy_set_header Connection "";
    }

    # Public assets - longer caching
    location /public/ {
        add_header Cache-Control "public, max-age=86400";
        proxy_pass http://nextjs_backend;
        proxy_http_version 1.1;
        proxy_set_header Connection "";
    }

    # === Web-Adobe API Routes ===
    location /web-adobe/api/ {
        # Remove /web-adobe prefix before proxying
        rewrite ^/web-adobe/api/(.*) /api/$1 break;

        proxy_pass http://web_adobe_api;
        proxy_http_version 1.1;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_set_header X-Forwarded-Host $server_name;

        # CORS headers (managed by FastAPI, but ensuring they pass through)
        proxy_hide_header Access-Control-Allow-Origin;
        add_header Access-Control-Allow-Origin $http_origin always;
        add_header Access-Control-Allow-Credentials "true" always;
        add_header Access-Control-Allow-Methods "GET, POST, PUT, DELETE, OPTIONS" always;
        add_header Access-Control-Allow-Headers "Authorization, Content-Type, X-Requested-With" always;

        # Handle preflight requests
        if ($request_method = OPTIONS) {
            return 204;
        }

        # Timeouts for long-running PDF processing
        proxy_connect_timeout 300s;
        proxy_send_timeout 300s;
        proxy_read_timeout 300s;

        # No caching for API
        proxy_cache_bypass 1;
        proxy_no_cache 1;
    }

    # Web-Adobe Health Check
    location /web-adobe/health {
        rewrite ^/web-adobe/health /health break;
        proxy_pass http://web_adobe_api;
        access_log off;
    }

    # === Next.js API routes - no caching ===
    location /api/ {
        proxy_pass http://nextjs_backend;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection 'upgrade';
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_cache_bypass $http_upgrade;
    }

    # Socket.IO - WebSocket support
    location /api/socket/io/ {
        proxy_pass http://nextjs_backend;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "upgrade";
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_cache_bypass $http_upgrade;
    }

    # Main application
    location / {
        proxy_pass http://nextjs_backend;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection 'upgrade';
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_cache_bypass $http_upgrade;
    }
}
